<style>

</style>
<div class="row">
    <div class="col-md-12">
        <div class="panel  panel-primary">
            <div class="panel-heading">
                <div class="panel-title"><h3>Manage Account Details for <u><span id="accountNameTextBlock"></span></u></h3></div>
            </div>
        </div><!-- ending the div panel here -->
    </div>
</div>
<div class="row">
    <span style="float:right;margin-bottom:15px;">
        <a id="createOneAccountDetailForCustomerAccountLink" href="/AccountDetails/CreateOneAccountDetailForCustomerAccount" 
           class="btn btn-primary btn-lg">Add Account Detail</a>
    </span>
    <div id="no-more-tables">
        <table id="accountDetailTable" 
               class="col-md-12 table-bordered table-striped table-condensed cf table-responsive ">
            <thead class="cf">
                <tr>
                    <th data-field="recordId">#</th>
                    <th>Actions</th>
                    <th style="width:10%">Day</th>
                    <th style="width:10%">Start Time</th>
                    <th style="width:10%">End Time</th>
                    <th style="width:10%">Effective Start Date</th>
                    <th style="width:10%">Effective End Date</th>
                    <th style="width:5%">Visible</th>
                    <th style="width:5%">&nbsp;</th>
                </tr>
            </thead>
            <tbody id="accountDetailTableBody"></tbody>
        </table>

    </div>
</div>


<!-- context menu definition start : to be used by the JavaScript logic to build context menu for each row.-->
<ul id="context-menu" class="dropdown-menu" style="font-size:14pt;">
    <li data-item="update_account_detail"><a>Update account detail</a></li>
</ul>
<!-- context menu definition end -->
@section Scripts{
    <script>
        window.customerAccountId = getIdFromAddressBar();

        //The following JavaScript function is reused often
        //to collect id value from the address bar for global scope variable
        //such as window.studentId, window.companyId,window.courseId etc
        function getIdFromAddressBar() {
            var urlArray = window.location.href.split('/');
            var id = urlArray[urlArray.length - 1];
            return id;
        };
        function dayOfWeekAsString(dayIndex) {
            return ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][dayIndex];
        };
        function getCustomerAccountNameFromCookie() {
            //Obtain the customer account name from the cookie
            //customer_account_name
            var cookieValue = Cookies.getJSON('customer_account');
            console.dir(cookieValue);
            return he.decode(cookieValue.accountName);//https://www.w3schools.com/jsref/jsref_decodeuricomponent.asp
        }

            $(document).ready(function () {
                loadAccountDetailData();
                $('#accountNameTextBlock').text(getCustomerAccountNameFromCookie());
                $('#createOneAccountDetailForCustomerAccountLink').attr('href', '/AccountDetails/CreateOneAccountDetailForCustomerAccount/' + window.customerAccountId);
            })
            function loadAccountDetailData() {
                //Note: jQuery.ajax(..) is also often written is $.ajax(..)
                $loadAccountDetailDataHandler = jQuery.ajax({
                    url: '/API/AccountDetails/GetCurrentAccountDetailsByCustomerAccountId/' + window.customerAccountId,
                    method: 'GET',
                    dataType: 'json',
                    cache: false,
                });
                $loadAccountDetailDataHandler.done(function (data, textStatus, jqXHR) {
                    var accountDetailList = data;
                    var accountDetail;
                    var accountDetailId = '';
                    var weekDayName = '';
                    var startTimeInHHMM = '';
                    var endTimeInHHMM = '';
                    var startTimeInMinutes = 0;
                    var endTimeInMinutes = 0;
                    var isEnabled = '';
                    var effectiveStartDate = '';
                    var effectiveEndDate = '';

                    var $tableElement = null;
                    var $cellElement = null;
                    var $rowElement = null;
                    //-------- Find the table element -----------
                    //I am using the $tableElement variable
                    //to represent the found HTML element which has a matching id of accountDetailTableBody
                    $tableBodyElement = $('#accountDetailTableBody');

                    //I want to build rows and cells (using tr and td HTML elements) so that
                    //I can display week day name, effective start date / end date,  start time, end time etc
                    //within the HTML table element, accountDetailTableBody. Recall that, I have already asked the
                    //$tableBodyElement variable to represent (reference) the table element.

                    //-------- Begin creating <tr> and <td> HTML element ------
                    for (index = 0; index < accountDetailList.length; index++) {

                        accountDetail = accountDetailList[index];
                        //Copy out the accout detail information
                        accountDetailId = accountDetail.accountDetailId;
                        weekDayIndex = accountDetail.dayOfWeekNumber;
                        startTimeInHHMM = accountDetail.startTimeInHHMM;
                        endTimeInHHMM = accountDetail.endTimeInHHMM;
                        effectiveStartDate = moment(new Date(accountDetail.effectiveStartDate)).format("DD/MM/YYYY");
                        effectiveEndDate = (accountDetail.effectiveEndDate != null) ?
                            moment(new Date(accountDetail.effectiveEndDate)).format("DD/MM/YYYY")
                            : 'NA';
                        isVisible = accountDetail.isVisible;
  
                        //Create new HTML <tr> element.
                        //At the same time let the $rowElement variable to represent it.
                        $rowElement = $('<tr></tr>');
                        $cellElement = $('<td></td>', { text: accountDetailId }); //This cell will be hidden by other JavaScript logic here.
                        $rowElement.append($cellElement);

                        //--------------- Add the a new cell element into the row represented by the $rowElement
                        //Notice that, this is calling a generateContextMenuButton method which will return a new cell element
                        $rowElement.append(generateContextMenuButton());

                        //Create the cell element which display week day name
                        $cellElement = $('<td></td>', { text: dayOfWeekAsString(weekDayIndex-1)});
                        $cellElement.attr('data-title', 'Day');
                        $rowElement.append($cellElement);
                        //Create the cell element which display start time
                        $cellElement = $('<td></td>', { text: startTimeInHHMM });
                        $cellElement.attr('data-title', 'Start time');
                        $rowElement.append($cellElement);
                        //Create the cell element which display end time
                        $cellElement = $('<td></td>', { text: endTimeInHHMM });
                        $cellElement.attr('data-title', 'End time');
                        $rowElement.append($cellElement);
                        //Create the cell element which display effective start date
                        $cellElement = $('<td></td>', { text: effectiveStartDate});
                        $cellElement.attr('data-title', 'Effective start date');
                        $rowElement.append($cellElement);
                        //Create the cell element which display effective end date
                        $cellElement = $('<td></td>', { text: effectiveEndDate });
                        $cellElement.attr('data-title', 'Effective end date');
                        $rowElement.append($cellElement);
                        //Create the cell element which display visibility status indicator
                        $cellElement = $('<td></td>');
                        $spanElement = $('<span></span>');
                        $spanElement.addClass(isVisible ? 'glyphicon glyphicon-ok' : 'glyphicon glyphicon-remove');
                        $cellElement.append($spanElement);
                        $cellElement.attr('data-title', 'Visibility');
                        $rowElement.append($cellElement);

                        //---------------- Using jQuery() to create the hyperlink element using the <a></a> --------
                        $hyperLinkElement = $('<a>Update</a>').attr('href', '/AccountDetails/UpdateOneAccountDetailForCustomerAccount/' + accountDetailId);
                        $hyperLinkElement.addClass('btn btn-primary btn-lg');
                        $cellElement = $('<td></td>');
                        $cellElement.append($hyperLinkElement);
                        //After letting the cell element containing the hyperlink element
                        //---------------Add the the new cell element into the row represented by the $rowElement
                        $rowElement.append($cellElement);

                        //Insert the $rowElement into the table element represented by $tableBodyElement.
                        $tableBodyElement.append($rowElement);
                        //----End of creating one row to display one account detail by using <tr> and <td> HTML element ---
                        // Proceed to the next accountDetail object in the accountDetailList Array.
                    }//end of for loop.
                    prepareContextMenu();   
                    
                    $('#accountDetailTable td:nth-child(1)').hide();//Hiding first column which display record id numbers
                    $('#accountDetailTable th:nth-child(1)').hide();//Hiding first column which display record id numbers

                }//end of JavaScript anonymous function
                )//end of the done() method;
                $loadAccountDetailDataHandler.fail(function (data, textStatus, jqXHR) {
                    new Noty({
                        text: 'Ajax call has failed due to : ' + data.statusText, type: 'error',
                        layout: 'center',
                        type: 'error',
                        closeWith: ['click', 'button']
                    }).show();//end of noty()
                })//end of $loadAccountDetailDataHandler.fail()
            }//end of loadAccountDetailData();

            function generateContextMenuButton() {
                var $cellElement = $('<td></td>');
                var $divContainer = $('<div class="btn-group btn-group-xs"></div>');
                var $buttonElement = $('<button class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>');
                $buttonElement.addClass('row-action-button');
                var $buttonDetailElements = $('<span  class="caret"></span>').append($('<span class="sr-only">Toggle Dropdown</span>'));
                $cellElement.append($divContainer.append($buttonElement.append($buttonDetailElements)));
                /* I have referenced the author's HTML sample at http://www.prograhammer.com/demos/bootstrap-table-contextmenu/
                < td >
                    <div class='btn-group btn-group-xs'>
                        <button type='button' class='btn btn-default dropdown-toggle row-action-button' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false'>
                            <span class='caret'></span>
                            <span class='sr-only'>Toggle Dropdown</span>
                        </button>
                    </div>
                </td>
          */
                $cellElement.attr('data-title', 'Actions'); //For responsive display purpose
                return $cellElement;
            }

            //Reference: https://github.com/prograhammer/bootstrap-table-contextmenu
            //For building responsive context menu. There are too many buttons taking up the widht
            //of the table display.
            function prepareContextMenu(){

                $('#accountDetailTable').bootstrapTable({
                    rowStyle: 'rowStyle',
                    contextMenu: '#context-menu',
                    contextMenuButton: '.row-action-button',
                    contextMenuAutoClickRow: true,
                    onClickRow: function (row, $el) {
                        $('#accountDetailTable').find('.success').removeClass('success');
                        $el.addClass('success');
                    },
                    onContextMenuItem: function (row, $el) {
                        if ($el.data('item') == 'update_account_detail') {
                            //alert('update account detail record id : ' + row.recordId);
                            
                            window.location = '/AccountDetails/UpdateOneAccountDetailForCustomerAccount/' + row.recordId;
                        }
                      }
                });
            }//end of function prepareContextMenu
    </script>
}


